{
  "rules": {
    "class-name": true,
    "comment-format": [
      true,
      "check-space"
    ],
    "curly": false,
    "eofline": false,
    "forin": true,
    "indent": [
      false,
      "tabs"
    ],
    "label-position": true,
    "max-line-length": [
      false,
      140
    ],
    "member-access": false,
    "member-ordering": [
      true,
      {
        "order": [
          {
            "name": "fields",
            "kinds": [
              "public-instance-field",
              "protected-instance-field",
              "private-instance-field"
            ]
          },
          {
            "name": "methods",
            "kinds": [
              "public-instance-method",
              "protected-instance-method",
              "private-instance-method"
            ]
          }
        ]
      }
    ],
    "no-arg": true,
    "no-bitwise": true,
    "no-console": [
      true,
      "debug",
      "info",
      "time",
      "timeEnd",
      "trace"
    ],
    "no-construct": true,
    "no-debugger": true,
    "no-duplicate-variable": true,
    "no-empty": false,
    "no-eval": true,
    "no-inferrable-types": true,
    "no-shadowed-variable": true,
    "no-string-literal": false,
    "no-switch-case-fall-through": true,
    "no-trailing-whitespace": true,
    "no-unused-expression": true,
    "no-unused-variable": true,
    "no-use-before-declare": true,
    "no-var-keyword": true,
    "object-literal-sort-keys": false,
    "one-line": [
      true,
      "check-open-brace",
      "check-catch",
      "check-else",
      "check-whitespace"
    ],
    "quotemark": [
      true,
      "single"
    ],
    "radix": true,
    "semicolon": [
      true
    ],
    "triple-equals": [
      true,
      "allow-null-check"
    ],
    "typedef-whitespace": [
      true,
      {
        "call-signature": "nospace",
        "index-signature": "nospace",
        "parameter": "nospace",
        "property-declaration": "nospace",
        "variable-declaration": "nospace"
      }
    ],
    "variable-name": false,
    "whitespace": [
      true,
      "check-branch",
      "check-decl",
      "check-operator",
      "check-separator",
      "check-type"
    ],
    "use-input-property-decorator": true,
    "use-output-property-decorator": true,
    "use-host-property-decorator": true,
    "no-input-rename": true,
    "no-output-rename": true,
    "use-life-cycle-interface": true,
    "use-pipe-transform-interface": true,
    "component-class-suffix": true,
    "directive-class-suffix": true,
    "rxjs-no-add": {
      "severity": "error"
    },
    "rxjs-no-operator": {
      "severity": "error"
    },
    "rxjs-no-patched": {
      "severity": "error"
    },
    "deprecation": {
      "severity": "warn"
    },
    "rxjs-no-internals": {
      "severity": "error"
    },
    "rxjs-ban-observables": {
      "options": [
        {
          "empty": "Use EMPTY",
          "never": "Use NEVER"
        }
      ],
      "severity": "error"
    },
    "rxjs-ban-operators": {
      "options": [
        {
          "combineLatest": "Use the static combineLatest",
          "concat": "Use the static concat",
          "merge": "Use the static merge",
          "race": "Use the static race",
          "zip": "Use the static zip"
        }
      ],
      "severity": "error"
    },
    "rxjs-no-subject-unsubscribe": {
      "severity": "error"
    },
    "rxjs-no-subject-value": {
      "severity": "error"
    },
    "rxjs-collapse-imports": true,
    "rxjs-pipeable-operators-only": true,
    "rxjs-no-static-observable-methods": true,
    "rxjs-proper-imports": true,
    "ban-types": {
      "options": [
        [
          "Object",
          "Avoid using the `Object` type. Did you mean `object`?"
        ],
        [
          "Function",
          "Avoid using the `Function` type. Prefer a specific function type, like `() => void`."
        ],
        [
          "Boolean",
          "Avoid using the `Boolean` type. Did you mean `boolean`?"
        ],
        [
          "Number",
          "Avoid using the `Number` type. Did you mean `number`?"
        ],
        [
          "String",
          "Avoid using the `String` type. Did you mean `string`?"
        ],
        [
          "Symbol",
          "Avoid using the `Symbol` type. Did you mean `symbol`?"
        ]
      ]
    }
  }
}
